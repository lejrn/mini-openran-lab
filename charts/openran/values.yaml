# Default values for openran chart.
# This is a YAML-formatted file.

# Global settings
global:
  imageRegistry: "ghcr.io/mini-openran-lab"
  imagePullPolicy: IfNotPresent
  storageClass: "standard"

# srsRAN gNodeB configuration
srsran:
  gnb:
    enabled: true
    image:
      repository: srsran/gnb
      tag: "22.10"
    resources:
      requests:
        cpu: "1000m"
        memory: "2Gi"
      limits:
        cpu: "2000m"
        memory: "4Gi"
    config:
      rf_driver: "zmq"
      device_args: "tx_port=tcp://127.0.0.1:2000,rx_port=tcp://127.0.0.1:2001,base_srate=23.04e6"
      mcs: 16  # Modulation and Coding Scheme
      channel_bandwidth_mhz: 20
      
  ue:
    enabled: true
    image:
      repository: srsran/ue
      tag: "22.10"
    resources:
      requests:
        cpu: "500m"
        memory: "1Gi"
      limits:
        cpu: "1000m"
        memory: "2Gi"
    config:
      rf_driver: "zmq"
      device_args: "tx_port=tcp://127.0.0.1:2001,rx_port=tcp://127.0.0.1:2000,base_srate=23.04e6"

# O-RAN RIC Platform
ric:
  enabled: true
  image:
    repository: oransc/ric-platform
    tag: "v2.4.0"
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
  
  # xApp Manager
  xappmgr:
    enabled: true
    image:
      repository: oransc/xapp-manager
      tag: "v1.0.0"

# xApps
xapps:
  beamTuner:
    enabled: true
    image:
      repository: "beam-tuner"
      tag: "latest"
    replicas: 1
    resources:
      requests:
        cpu: "200m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "1Gi"
    config:
      logLevel: "INFO"
      cqiThreshold: 7
      adjustmentInterval: 30

# Prometheus monitoring
prometheus:
  enabled: true
  server:
    resources:
      requests:
        cpu: "200m"
        memory: "1Gi"
      limits:
        cpu: "500m"
        memory: "2Gi"
    retention: "7d"
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534
  
  # Scrape configs for OpenRAN components
  serverFiles:
    prometheus.yml:
      global:
        scrape_interval: 15s
        evaluation_interval: 15s
      
      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']
        
        - job_name: 'srsran-gnb'
          static_configs:
            - targets: ['{{ include "openran.fullname" . }}-gnb:9091']
          metrics_path: '/metrics'
          scrape_interval: 10s
        
        - job_name: 'srsran-ue'
          static_configs:
            - targets: ['{{ include "openran.fullname" . }}-ue:9092']
          metrics_path: '/metrics'
          scrape_interval: 10s

# Grafana dashboards
grafana:
  enabled: true
  adminUser: admin
  # Use strong randomly generated password - will be created as secret
  adminPassword: ""
  # Generate random password if not provided
  admin:
    existingSecret: ""
    userKey: admin-user
    passwordKey: admin-password
  resources:
    requests:
      cpu: "200m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "1Gi"
  
  # Pre-configure data sources
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://openran-radio-prometheus-server:80
          access: proxy
          isDefault: true

# Network policies and service mesh
networking:
  networkPolicy:
    enabled: true
  serviceMesh:
    enabled: false

# Resource quotas and limits
resourceQuota:
  enabled: true
  pods: "10"
  pvc: "4"
  services: "5"
  secrets: "10"
  configmaps: "10"
  requestsCpu: "4"
  requestsMemory: "8Gi"
  limitsCpu: "8"
  limitsMemory: "16Gi"
  requestsStorage: "20Gi"

limitRange:
  enabled: true
  container:
    defaultCpu: "500m"
    defaultMemory: "512Mi"
    defaultRequestCpu: "100m"
    defaultRequestMemory: "128Mi"
    maxCpu: "2"
    maxMemory: "4Gi"
    minCpu: "50m"
    minMemory: "64Mi"
  pod:
    maxCpu: "4"
    maxMemory: "8Gi"
    minCpu: "100m"
    minMemory: "128Mi"
  pvc:
    maxStorage: "10Gi"
    minStorage: "1Gi"

# Pod Security Standards
podSecurity:
  enabled: true
  enforce: "restricted"
  audit: "restricted"
  warn: "restricted"

# Image security policies
imageSecurity:
  enabled: false  # Requires admission controller setup
  requireSignatures: false
  maxCriticalVulns: 0
  maxHighVulns: 2
  failurePolicy: "Fail"
